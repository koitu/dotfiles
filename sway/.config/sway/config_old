# assign workspace to monitors
#workspace $ws1 output DP-1.1.1 DP-0 HDMI-0 DP-1 eDP-1-1
#workspace $ws2 output DP-1.1.1 DP-0 HDMI-0 DP-1 eDP-1-1
#workspace $ws3 output DP-1.1.8 DP-1 eDP-1-1
#workspace $ws4 output DP-1.1.8 DP-1 eDP-1-1
#workspace $ws5 output eDP-1-1
#workspace $ws6 output eDP-1-1

# mod key (Mod1=<Alt> Mod4=<Super>)
set $mod Mod1

font pango:Firacode Nerd Font Mono 11
# font pango:Noto Mono 10
# font pango:Helvetica Neue, FontAwesome 11
# This font is widely installed, provides lots of unicode glyphs, right-to-left text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

###################
### fn controls ###
###################

# # Use pactl to adjust volume in PulseAudio.
# # set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +2% 	#  && $refresh_i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -2% 	#  && $refresh_i3status
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle 		#  && $refresh_i3status
# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle 	#  && $refresh_i3status
# 
# # Screen brightness control
# bindsym XF86MonBrightnessUp exec --no-startup-id "brightnessctl s 10%+"
# bindsym XF86MonBrightnessDown exec --no-startup-id "brightnessctl s 10%-"
# 
# # mpd controls (maybe replace with playerctl)
# bindsym XF86AudioNext exec --no-startup-id mpc next
# bindsym XF86AudioPrev exec --no-startup-id mpc prev
# bindsym XF86AudioPlay exec --no-startup-id mpc toggle

####################
### bindsym keys ###
####################

# start a terminal
#bindsym $mod+Return exec termite
bindsym $mod+Return exec --no-startup-id alacritty

# start file manager
bindsym $mod+Shift+Return exec --no-startup-id thunar

# kill focused window
bindsym $mod+Shift+q kill

# launch programs
bindsym $mod+d exec --no-startup-id tofi

#  lock screen
#  bindsym $mod+9 exec --no-startup-id blurlock

#  launch categorized menu
#  bindsym $mod+z exec --no-startup_id morc_menu

# screenshot
bindsym Print exec grim
bindsym Ctrl+Print exec grim -g "$(slurp)"

###########################
### workspaces controls ###
###########################

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# change focus with cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# move focused window with cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move workspace between screens
bindsym $mod+Ctrl+semicolon move workspace to output right
bindsym $mod+Ctrl+j move workspace to output left

# split orientation
#bindsym $mod+h split h; exec notify-send 'tile horizontally'
#bindsym $mod+v split v; exec notify-send 'tile vertically'
bindsym $mod+q split toggle; exec notify-send 'toggle'

# fullscreen mode toggle
bindsym $mod+f fullscreen toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# toggle split toggles split orientation
# bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# workspace_layout <default|stacking|tabbed> (default is tiling)
workspace_layout default

# border style <normal|normal|1pixel|pixel xx|none|pixel>
#new_window pixel 2
#new_float pixel 2
default_border pixel 2

# hide_edge_borders <none|vertical|horizontal|both|smart>
hide_edge_borders smart

# change borders
# bindsym $mod+u border none
# bindsym $mod+y border pixel 2
# bindsym $mod+n border normal

##########################
### workspace settings ###
##########################

# focus wrapping (wrap around when reaching end of screen) <yes|no|force|workspace>
focus_wrapping yes

# focus on the container mouse is hovering over
focus_follows_mouse yes

# mouse follows focus <none|output|container>
# https://github.com/swaywm/sway/issues/2577
mouse_warping container

# switch to workspace with urgent windows automatically
for_window [urgent=latest] focus

# Define default workspace names
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"

# workplace switching
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9

# moving containers to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9

#######################
### system controls ###
#######################

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

#  # Set shut down, restart and locking features
#  bindsym $mod+0 mode "$mode_system"
#  set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
#  mode "$mode_system" {
#      bindsym l exec --no-startup-id i3exit lock, mode "default"
#      bindsym s exec --no-startup-id i3exit suspend, mode "default"
#      bindsym u exec --no-startup-id i3exit switch_user, mode "default"
#      bindsym e exec --no-startup-id i3exit logout, mode "default"
#      bindsym h exec --no-startup-id i3exit hibernate, mode "default"
#      bindsym r exec --no-startup-id i3exit reboot, mode "default"
#      bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"
#
#      # exit system mode: "Enter" or "Escape"
#      bindsym Return mode "default"
#      bindsym Escape mode "default"
#  }

########################
### resizing windows ###
########################

# resize window (you can also use the mouse for that)
mode "resize" {
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
#bar {
#        status_command i3status
#}

##########################
### autostart programs ###
##########################
# The combination of xss-lock, nm-applet and pactl is a popular choice, so they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager tray GUI
# exec --no-startup-id nm-applet

#exec --no-startup-id /usr/lib/geoclue-2.0/demos/agent

# start notification handler
#exec --no-startup-id dunst

# start up num lock on
#exec --no-startup-id numlockx on

# set wallpaper
#exec --no-startup-id feh --bg-fill ~/.config/i3/fuzzy_wall.jpg

# start picom
# exec_always --no-startup-id picom -b

# hide mouse when typing
#exec --no-startup-id xbanish
# https://github.com/swaywm/sway/issues/1471#issuecomment-888780274
seat * hide_cursor when-typing enable

exec --no-startup-id setxkbmap -option caps:ctrl_modifier

# exec --no-startup-id polybar top

# exec --no-startup-id i3-msg 'workspace $ws8; exec termite -e ncmpcpp'

# start authentication agent
# exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &

#exec --no-startup-id umonitor --autoload && umonitor --listen --daemonize

# exec --no-startup-id i3-msg 'workspace $ws5; exec discord'

#####################
### color palette ###
#####################

#TODO: create .Xreasources
# Color palette used for the terminal ( ~/.Xresources file )
# Colors are gathered based on the documentation https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
# If you want your bar to have the same background color as your terminal background change the line 362 from:
# background #14191D
# to:
# background $term_background
# Same logic applied to everything else.

#  set_from_resource $term_background background
#  set_from_resource $term_foreground foreground
#  set_from_resource $term_color0     color0
#  set_from_resource $term_color1     color1
#  set_from_resource $term_color2     color2
#  set_from_resource $term_color3     color3
#  set_from_resource $term_color4     color4
#  set_from_resource $term_color5     color5
#  set_from_resource $term_color6     color6
#  set_from_resource $term_color7     color7
#  set_from_resource $term_color8     color8
#  set_from_resource $term_color9     color9
#  set_from_resource $term_color10    color10
#  set_from_resource $term_color11    color11
#  set_from_resource $term_color12    color12
#  set_from_resource $term_color13    color13
#  set_from_resource $term_color14    color14
#  set_from_resource $term_color15    color15

#########################
### i3status or i3bar ###
#########################

 # Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
 	mode hide
 	status_command waybar
 	position bottom

 ## please set your primary output first. Example: 'xrandr --output eDP1 --primary'
 	tray_output primary
 	tray_output eDP1

 #	bindsym button4 nop
 # 	bindsym button5 nop
 #   font pango:Helvetica Neue, FontAwesome 11
 	strip_workspace_numbers yes

     colors {
         background #202A2E
         statusline #F9FAF9
         separator  #454947

 #	                      border  backgr. text
         focused_workspace  #F9FAF9 #16a085 #292F34
         active_workspace   #595B5B #353836 #FDF6E3
         inactive_workspace #595B5B #202A2E #EEE8D5
         binding_mode       #16a085 #2C2C2C #F9FAF9
         urgent_workspace   #16a085 #FDF6E3 #E5201D
     }
}

#  # hide/unhide i3status bar
#  bindsym $mod+m bar mode toggle
#
#  # Theme colors
#  # class                   border  backgr. text    indic.   child_border
#    client.focused          #556064 #556064 #80FFF9 #FDF6E3
#    client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
#    client.unfocused        #2F3D44 #2F3D44 #1ABC9C #454948
#    client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
#    client.placeholder      #000000 #0c0c0c #ffffff #000000
#
#    client.background       #2B2C2B
#  ## Plasma Integration
#  # Try to kill the wallpaper set by Plasma (it takes up the entire workspace and hides everythiing)
#  #exec --no-startup-id wmctrl -c Plasma
#  #for_window [title="Desktop — Plasma"] kill, floating enable, border none

#############################
### settings for i3-gaps: ###
#############################

#  # Set inner/outer gaps
#  gaps inner 0
#  #gaps inner 10
#  gaps outer 0
#
#  # Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
#  # gaps inner|outer current|all set|plus|minus <px>
#  # gaps inner all set 10
#  # gaps outer all plus 5
#
#  # Smart gaps (gaps used if only more than one container on the workspace)
#  smart_gaps on
#
#  # Smart borders (draw borders around container only if it is not the only container on this workspace)
#  # on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#  smart_borders on
#
#  # Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
#  set $mode_gaps Gaps: (o)uter, (i)nner
#  set $mode_gaps_outer Outer Gaps: (local) +|-|0 , (global) Shift +|-|0
#  set $mode_gaps_inner Inner Gaps: (local) +|-|0 , (global) Shift +|-|0
#  bindsym $mod+Shift+g mode "$mode_gaps"
#
#  mode "$mode_gaps" {
#          bindsym o      mode "$mode_gaps_outer"
#          bindsym i      mode "$mode_gaps_inner"
#
#          bindsym Return mode "default"
#          bindsym Escape mode "default"
#          bindsym $mod+Shift+g mode "default"
#  }
#  mode "$mode_gaps_inner" {
#          bindsym plus  gaps inner current plus 5
#          bindsym minus gaps inner current minus 5
#          bindsym 0     gaps inner current set 0
#
#          bindsym Shift+plus  gaps inner all plus 5
#          bindsym Shift+minus gaps inner all minus 5
#          bindsym Shift+0     gaps inner all set 0
#
#          bindsym Return mode "default"
#          bindsym Escape mode "default"
#  	bindsym $mod+Shift+g mode "default"
#  }
#  mode "$mode_gaps_outer" {
#          bindsym plus  gaps outer current plus 5
#          bindsym minus gaps outer current minus 5
#          bindsym 0     gaps outer current set 0
#
#          bindsym Shift+plus  gaps outer all plus 5
#          bindsym Shift+minus gaps outer all minus 5
#          bindsym Shift+0     gaps outer all set 0
#
#          bindsym Return mode "default"
#          bindsym Escape mode "default"
#          bindsym $mod+Shift+g mode "default"
#  }
